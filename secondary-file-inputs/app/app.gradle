plugins {
    id("java")
}

def artifactType = Attribute.of("artifactType", String)

configurations {
    externalClasspath
    jarsToRelocate {
        attributes.attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage, Usage.JAVA_RUNTIME))
        canBeResolved = true
        canBeConsumed = false
    }
}

afterEvaluate {
    dependencies.add("jarsToRelocate", project)
}

dependencies {
    implementation(project(":lib1"))
    implementation(project(":lib2"))
    externalClasspath("com.google.guava:guava:27.0.1-jre")

    registerTransform(ClassRelocator) {
        from.attribute(artifactType, "jar")
        to.attribute(artifactType, "relocated")
        configuration {
            externalClasspath = configurations.externalClasspath
        }
    }
}

tasks.register("relocateJars", Copy) {
    def artifacts = configurations.jarsToRelocate.incoming.artifactView {
        attributes { attribute(artifactType, "relocated") }
    }.artifacts
    from(artifacts.artifactFiles)
    into(project.layout.buildDirectory.dir("relocated"))
}